/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.homepisec.sensor.rest.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.homepisec.sensor.rest.client.model.Device;

/**
 * AlarmStatus
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-04T09:14:48.656+01:00")
public class AlarmStatus {
  @JsonProperty("countdownEnd")
  private OffsetDateTime countdownEnd = null;

  @JsonProperty("countdownSource")
  private Device countdownSource = null;

  @JsonProperty("countdownStart")
  private OffsetDateTime countdownStart = null;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    DISARMED("DISARMED"),
    
    ARMED("ARMED"),
    
    COUNTDOWN("COUNTDOWN"),
    
    TRIGGERED("TRIGGERED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("triggerSource")
  private Device triggerSource = null;

  @JsonProperty("triggerStart")
  private OffsetDateTime triggerStart = null;

  public AlarmStatus countdownEnd(OffsetDateTime countdownEnd) {
    this.countdownEnd = countdownEnd;
    return this;
  }

   /**
   * Get countdownEnd
   * @return countdownEnd
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCountdownEnd() {
    return countdownEnd;
  }

  public void setCountdownEnd(OffsetDateTime countdownEnd) {
    this.countdownEnd = countdownEnd;
  }

  public AlarmStatus countdownSource(Device countdownSource) {
    this.countdownSource = countdownSource;
    return this;
  }

   /**
   * Get countdownSource
   * @return countdownSource
  **/
  @ApiModelProperty(value = "")
  public Device getCountdownSource() {
    return countdownSource;
  }

  public void setCountdownSource(Device countdownSource) {
    this.countdownSource = countdownSource;
  }

  public AlarmStatus countdownStart(OffsetDateTime countdownStart) {
    this.countdownStart = countdownStart;
    return this;
  }

   /**
   * Get countdownStart
   * @return countdownStart
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCountdownStart() {
    return countdownStart;
  }

  public void setCountdownStart(OffsetDateTime countdownStart) {
    this.countdownStart = countdownStart;
  }

  public AlarmStatus state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public AlarmStatus triggerSource(Device triggerSource) {
    this.triggerSource = triggerSource;
    return this;
  }

   /**
   * Get triggerSource
   * @return triggerSource
  **/
  @ApiModelProperty(value = "")
  public Device getTriggerSource() {
    return triggerSource;
  }

  public void setTriggerSource(Device triggerSource) {
    this.triggerSource = triggerSource;
  }

  public AlarmStatus triggerStart(OffsetDateTime triggerStart) {
    this.triggerStart = triggerStart;
    return this;
  }

   /**
   * Get triggerStart
   * @return triggerStart
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTriggerStart() {
    return triggerStart;
  }

  public void setTriggerStart(OffsetDateTime triggerStart) {
    this.triggerStart = triggerStart;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlarmStatus alarmStatus = (AlarmStatus) o;
    return Objects.equals(this.countdownEnd, alarmStatus.countdownEnd) &&
        Objects.equals(this.countdownSource, alarmStatus.countdownSource) &&
        Objects.equals(this.countdownStart, alarmStatus.countdownStart) &&
        Objects.equals(this.state, alarmStatus.state) &&
        Objects.equals(this.triggerSource, alarmStatus.triggerSource) &&
        Objects.equals(this.triggerStart, alarmStatus.triggerStart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countdownEnd, countdownSource, countdownStart, state, triggerSource, triggerStart);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlarmStatus {\n");
    
    sb.append("    countdownEnd: ").append(toIndentedString(countdownEnd)).append("\n");
    sb.append("    countdownSource: ").append(toIndentedString(countdownSource)).append("\n");
    sb.append("    countdownStart: ").append(toIndentedString(countdownStart)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    triggerSource: ").append(toIndentedString(triggerSource)).append("\n");
    sb.append("    triggerStart: ").append(toIndentedString(triggerStart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

